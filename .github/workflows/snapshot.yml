name: Snapshot

on:
  workflow_dispatch:

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
  NODE_VERSION: "20.x"

jobs:
  # Validação inicial e setup
  validate:
    name: Validate Environment
    runs-on: ubuntu-latest
    timeout-minutes: 5
    outputs:
      should-deploy: ${{ steps.check.outputs.should-deploy }}
    steps:
      - name: Check required secrets
        id: check
        run: |
          if [[ -z "${{ secrets.VERCEL_TOKEN }}" || -z "${{ secrets.VERCEL_ORG_ID }}" || -z "${{ secrets.VERCEL_PROJECT_ID }}" ]]; then
            echo "❌ Missing required Vercel secrets"
            echo "should-deploy=false" >> $GITHUB_OUTPUT
            exit 1
          else
            echo "✅ All required secrets are present"
            echo "should-deploy=true" >> $GITHUB_OUTPUT
          fi

  # Build, testes e validações
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest
    needs: validate
    if: needs.validate.outputs.should-deploy == 'true'
    outputs:
      build-success: ${{ steps.build-status.outputs.success }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"

      - name: Verify Node and npm versions
        run: |
          echo "Node version: $(node --version)"
          echo "NPM version: $(npm --version)"

      - name: Install dependencies
        run: |
          npm ci --prefer-offline --no-audit
          echo "✅ Dependencies installed successfully"

      - name: Run unit tests
        run: |
          if npm run test --if-present; then
            echo "✅ Tests passed"
          else
            echo "⚠️ No tests found or tests failed"
          fi
        continue-on-error: true

      - name: Build project
        id: build
        run: |
          if npm run build --if-present; then
            echo "✅ Build completed successfully"
            echo "BUILD_SUCCESS=true" >> $GITHUB_ENV
          else
            echo "❌ Build failed"
            echo "BUILD_SUCCESS=false" >> $GITHUB_ENV
            exit 1
          fi

      - name: Set build status
        id: build-status
        run: echo "success=${{ env.BUILD_SUCCESS }}" >> $GITHUB_OUTPUT

      - name: Upload build artifacts
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            dist/
            .next/
            build/
          retention-days: 1
